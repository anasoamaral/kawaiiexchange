<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Kawaii Exchange</title>
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="./node_modules/nes.css/css/nes.min.css">
    <link href="https://fonts.googleapis.com/css?family=Press+Start+2P" rel="stylesheet">
    <link href="https://unpkg.com/nes.css/css/nes.css" rel="stylesheet" />

  </head>
  <body>
    <canvas id="glitterCanvas"></canvas>

    <script src="index.js" defer></script>

  <div id="container-kawaii">


    <div id="title" class="item">
      <h1>Kawaii exchange</h1>
    </div>


    <div id="imagem" class="item">
      <img src="lacinho3.png">
    </div>

    <div class="item" id="formulario">
    <form  method="POST" action="/convert">
      <label for="fname">Amount:</label><br>
      <input class="auto-size"  oninput="autoSize(this)" type="number" step="0.01" name="valor" id="valor" value=<%= valor%> required><br>
      <br>
      <label for="moedaOrigem">Convert from</label>

  <select id="moedaOrigem" name="moedaorigem">
    <% moedasDisponiveis.forEach(moeda => { %>
      <option value="<%= moeda[0] %>" <%= moedaOrigem === moeda[0] ? 'selected' : '' %>><%= moeda[1] %> (<%= moeda[0] %>)</option>
    <% }) %>
  </select>
  <br>
  <label for="moedaDestino">to:</label>
  <br>
  <select id="moedaDestino" name="moedadestino">
    <% moedasDisponiveis.forEach(moeda => { %>
      <option value="<%= moeda[0] %>" <%= moedaDestino === moeda[0] ? 'selected' : '' %>><%= moeda[1] %> (<%= moeda[0]%>)</option>
    <% }) %>
    </select>
    <br>
    <br>
  <input id="botao-principal" type="submit" value="Calculate">
    </form> 
  </div>

    <br>
    <div id="result" class="item">
      <label for="fname">Result: </label>
      <input type="text" id="resultado" value="<%= content || '' %>" readonly>
    </div>

    <br>
    <br>
<p>---------------------</p>

    <div class="item" id="info">
      <p>Info</p>
    <%if (taxa) {%>
    <p>Rate: <%=taxa%> </p>
    <% } %>
    <% if (atualizacao) { %>
    <p>Last updated: <%= atualizacao %></p>
    <% } %>
  </div>
  <div class="item" id="botao-limpar">
    <a href="/"><button type="button">Clear</button></a>
  </div>
    </div>
  </body>

<script>
   
   const canvas = document.getElementById('glitterCanvas');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

class Particle {
  constructor() {
    this.reset();
  }

  reset() {
    this.x = Math.random() * canvas.width;
    this.y = Math.random() * canvas.height;
    this.size = Math.random() * 2 + 2;
    this.speed = Math.random() * 0.5 + 0.2;
    this.opacity = Math.random() * 0.5 + 0.5; // mínimo de 0.5, bem mais visível
    this.color = `rgba(255, 255, 255, ${this.opacity})`;

  }

  update() {
    this.y += this.speed;
    this.rotation += 0.01;
    this.opacity += (Math.random() - 0.5) * 0.05;
    if (this.opacity < 0.5) this.opacity = 0.5;
    if (this.opacity > 1) this.opacity = 1;
    if (this.y > canvas.height) {
      this.reset();
      this.y = 0;
    }
  }

  draw(ctx) {
    ctx.save();
    ctx.translate(this.x, this.y);
    ctx.rotate(this.rotation);
    ctx.beginPath();

    // desenha uma mini estrelinha (tipo ✦)
    for (let i = 0; i < 5; i++) {
      ctx.lineTo(0, -this.size);
      ctx.rotate(Math.PI / 5);
      ctx.lineTo(0, this.size);
      ctx.rotate(Math.PI / 5);
    }

    ctx.closePath();
    ctx.fillStyle = '#eeeeee';
    ctx.globalAlpha = this.opacity;
    ctx.shadowColor = '#ffffff';
    ctx.shadowBlur = 25;
    ctx.fill();
    ctx.restore();
  }
}

const particles = [];
for (let i = 0; i < 150; i++) {
  particles.push(new Particle());
}

function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  for (let p of particles) {
    p.update();
    p.draw(ctx);
  }
  requestAnimationFrame(animate);
}

animate();

window.addEventListener('resize', () => {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
});

function autoSize(input) {
  const ghost = document.getElementById("ghost");
  ghost.style.font = window.getComputedStyle(input).font;
  ghost.textContent = input.value || input.placeholder;
  input.style.width = ghost.offsetWidth + 10 + "px"; // +10 pra não ficar apertado
}

const input = document.getElementById("meuInput");
autoSize(input); // ajusta no início também


</script>

</html>
